[pan_log]
rename = pan:log
pulldown_type = false
# This first line adjusts PAN-OS 6.1.0 threat logs to revised 6.1.1+ format where the reportid field is at the end.
SEDCMD-6_1_0 = s/^((?:[^,]+,){3}THREAT,(?:[^,]*,){27}".*",[^,]*,)(\d+),((?:[^,]*,){3})(\d+,0x\d+,(?:[^,]*,){14})$/\1\3\4,\2/
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_endpoint, pan_correlation
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 44

[pan:log]
category = Network & Security
description = Output produced by the Palo Alto Networks Next-generation Firewall and Traps Endpoint Security Manager
pulldown_type = true
# This first line adjusts PAN-OS 6.1.0 threat logs to revised 6.1.1+ format where the reportid field is at the end.
SEDCMD-6_1_0 = s/^((?:[^,]+,){3}THREAT,(?:[^,]*,){27}".*",[^,]*,)(\d+),((?:[^,]*,){3})(\d+,0x\d+,(?:[^,]*,){14})$/\1\3\4,\2/
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 44
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_endpoint, pan_correlation

[pan_threat]
rename = pan:threat

[pan:threat]
SHOULD_LINEMERGE = false

REPORT-search = extract_threat, extract_threat_id, extract_dest_hostname, extract_major_content_type, extract_filename

FIELDALIAS-app                      = app as application
FIELDALIAS-vsys                     = virtual_system as vsys

# Field Aliases to map sepcific fields to the Splunk Common Information Model--Intrusion Detection
EVAL-vendor_action                  = action
LOOKUP-vendor_action                = pan_vendor_action_lookup vendor_action OUTPUT action
FIELDALIAS-src_for_pan_threat       = src_ip as src
FIELDALIAS-dest_for_pan_threat      = dest_ip as dest
FIELDALIAS-dvc_for_pan_threat       = host as dvc

#based on https://www.paloaltonetworks.com/documentation/61/pan-os/pan-os/reports-and-logging/syslog-field-descriptions.html
EVAL-signature                      = if(match(threat_name, "\(\d+\)$"), case(threat_id >= 8000 AND threat_id <= 8099, "Scan detection(".threat_id.")",threat_id >= 8500 AND threat_id <= 8599, "Flood detection(".threat_id.")",threat_id == 9999, "URL Filtering log(".threat_id.")",threat_id >= 10000 AND threat_id <= 19999, "Spyware phone home detection(".threat_id.")",threat_id >= 20000 AND threat_id <= 29999, "Spyware download detection(".threat_id.")",threat_id >= 30000 AND threat_id <= 44999, "Vulnerability exploit detection(".threat_id.")",threat_id >= 52000 AND threat_id <= 52999, "File type detection(".threat_id.")",threat_id >= 60000 AND threat_id <= 69999, "Data filtering detection(".threat_id.")",threat_id >= 100000 AND threat_id <= 2999999, "Virus detection(".threat_id.")",threat_id >= 3000000 AND threat_id <= 3999999,"WildFire signature feed(".threat_id.")",threat_id >= 4000000 AND threat_id <= 4999999,"DNS Botnet signatures(".threat_id.")",1==1, "Unknown(".threat_id.")"), threat_name)

FIELDALIAS-signature_id             = threat_id as signature_id
EVAL-user                           = coalesce(src_user,dest_user,"unknown")
# Misc field is used by pan_url logs for full URL accessed.  Alias to url field.
FIELDALIAS-url_for_pan_threat       = misc as url

FIELDALIAS-protocol_for_pan_threat  = protocol as vendor_protocol

# Determine client and server ip address based on direction of flow
EVAL-server_ip       = if(isnull(direction) OR direction="client-to-server", dest_ip, src_ip)
EVAL-client_ip       = if(isnull(direction) OR direction="client-to-server", src_ip, dest_ip)
# Determine clinet and server geo location based on direction of flow
EVAL-server_location = if(isnull(direction) OR direction="client-to-server", dest_location, src_location)
EVAL-client_location = if(isnull(direction) OR direction="client-to-server", src_location, dest_location)
# Set report_id field for wildfire logs
EVAL-report_id       = if(log_subtype="wildfire", coalesce(report_id,threat_id), 0)


LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
LOOKUP-pan_threat_id              = threat_lookup threat_id
LOOKUP-pan_app                    = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                  = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                 = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class             = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas


[pan_traffic]
rename = pan:traffic

[pan:traffic]
SHOULD_LINEMERGE = false

REPORT-search = extract_traffic

FIELDALIAS-app                       = app as application
FIELDALIAS-vsys                      = virtual_system as vsys
# Field Aliases to map specific fields to the Splunk Common Information Model - Network Traffic
EVAL-vendor_action                   = action
LOOKUP-vendor_action                 = pan_vendor_action_lookup vendor_action OUTPUT action
# bytes, bytes_in, bytes_out
FIELDALIAS-dest_for_pan_traffic      = dest_ip as dest
FIELDALIAS-dvc_for_pan_traffic       = host as dvc
FIELDALIAS-protocol_for_pan_traffic  = protocol as vendor_protocol
FIELDALIAS-transport                 = protocol as transport
FIELDALIAS-src_for_pan_traffic       = src_ip as src
FIELDALIAS-dest_category             = category as dest_category

# Set user field
EVAL-user                            = coalesce(src_user,dest_user,"unknown")
# Determine client and server ip address based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_ip                       =  dest_ip
EVAL-client_ip                       =  src_ip
# Determine client and server geo location based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_location                 = dest_location
EVAL-client_location                 = src_location

LOOKUP-vendor_info_for_pan_config    = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
LOOKUP-pan_app                       = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges,as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                     = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                    = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class                = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas

[pan_system]
rename = pan:system

[pan:system]
SHOULD_LINEMERGE = false
REPORT-search = extract_system

FIELDALIAS-vsys                   = virtual_system as vsys
# Field Aliases to map specific fields to the Splunk Common Information Model - Update
FIELDALIAS-dvc_for_pan_system     = host as dvc
FIELDALIAS-dest_for_pan_system    = host as dest
FIELDALIAS-signature              = event_id as signature
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product

[pan_config]
rename = pan:config

[pan:config]
SHOULD_LINEMERGE = false
REPORT-search = extract_config


FIELDALIAS-vsys                = virtual_system as vsys
FIELDALIAS-cmd                 = command as cmd
FIELDALIAS-config              = configuration_path as path
# Field Aliases to map specific fields to the Splunk Common Information Model - Change Analysis
FIELDALIAS-dvc_for_pan_config  = host as dvc
FIELDALIAS-dest_for_pan_config = host as dest

# Manually set log_subtype because it isn't in the log
EVAL-log_subtype = "config"
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product


[pan:hipmatch]
SHOULD_LINEMERGE = false

REPORT-search = extract_hipmatch

FIELDALIAS-vsys                     = virtual_system as vsys

# Field Aliases to map sepcific fields to the Splunk Common Information Model--Intrusion Detection
FIELDALIAS-src_for_pan_hipmatch     = src_ip as src
FIELDALIAS-dvc_for_pan_hipmatch     = host as dvc
FIELDALIAS-user_for_pan_hipmatch    = src_user as user

LOOKUP-vendor_info_for_pan_hipmatch = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                    = classification_lookup cidr as src_ip OUTPUT classification as src_class


[pan_endpoint]
rename = pan:endpoint

[pan:endpoint]
SHOULD_LINEMERGE = false 
MAX_TIMESTAMP_LOOKAHEAD = 16 
REPORT-search = extract_endpoint_pipes, extract_date, extract_endpoint_additional_data, extract_endpoint_preventionkey

EVAL-user                   = coalesce(suser,duser)
EVAL-dest_nt_domain         = mvindex(split(user,"\\"),0)
FIELDALIAS-product_version  = endpoint_version as product_version
FIELDALIAS-vendor_product   = product as vendor_product
EVAL-action                 = case(log_subtype == "Prevention Event","blocked", log_subtype == "Notification Event","deferred", log_subtype == "Provisional Event","deferred", log_subtype == "Access Violation","blocked", log_subtype == "Service Warning","allowed")
FIELDALIAS-file_hash        = fileHash as file_hash
FIELDALIAS-file_name        = deviceProcessName as file_name
FIELDALIAS-src              = shost as src
FIELDALIAS-dest             = dhost as dest
FIELDALIAS-category         = cs2 as category
FIELDALIAS-signature        = cs2 as signature

LOOKUP-endpoint_severity    = endpoint_severity_lookup severity_code OUTPUT severity

[pan:correlation]
REPORT-correlation = extract_correlation
