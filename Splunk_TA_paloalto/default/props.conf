[pan_log]
pulldown_type = false
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 100
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_decryption

[pan:log]
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 100
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_decryption

[pan:firewall]
category = Network & Security
description = Syslog from Palo Alto Networks Next-generation Firewall
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_decryption

[pan:firewall_cloud]
category = Network & Security
description = Firewall logs from Palo Alto Networks cloud logging
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = TimeGenerated":"
MAX_TIMESTAMP_LOOKAHEAD = 50
KV_MODE = json
REPORT-search = extract_threat_id_cloud, extract_threat_name_cloud, extract_dest_hostname_cloud, extract_major_content_type_cloud

FIELDALIAS-fwcloud_application = Application as application
FIELDALIAS-fwcloud_app = Application as app
FIELDALIAS-fwcloud_app_is_saas = IsSaaSApplication as app:is_saas
FIELDALIAS-fwcloud_bytes = Bytes as bytes
FIELDALIAS-fwcloud_bytes_out = BytesReceived as bytes_out
FIELDALIAS-fwcloud_bytes_in = BytesSent as bytes_in
EVAL-client_ip = coalesce(SourceAddress, PrivateIPv4)
FIELDALIAS-fwcloud_client_location = SourceLocation as client_location
EVAL-description = coalesce(Description, EventDescription)
FIELDALIAS-fwcloud_dest = DestinationAddress as dest
FIELDALIAS-fwcloud_dest_host = DestinationDeviceHost as dest_host
FIELDALIAS-fwcloud_dest_interface = OutboundInterface as dest_interface
FIELDALIAS-fwcloud_dest_ip = DestinationAddress as dest_ip
FIELDALIAS-fwcloud_dest_location = DestinationLocation as dest_location
FIELDALIAS-fwcloud_dest_port = DestinationPort as dest_port
FIELDALIAS-fwcloud_dest_user = DestinationUser as dest_user
FIELDALIAS-fwcloud_dest_zone = ToZone as dest_zone
EVAL-direction = replace(DirectionOfAttack, " ", "-")
EVAL-dvc_name = coalesce(DeviceName, LogSourceName)
EVAL-event_id = coalesce(EventName, EventIDValue)
FIELDALIAS-fwcloud_file_hash = FileHash as file_hash
FIELDALIAS-fwcloud_file_name = FileName as file_name
FIELDALIAS-fwcloud_file_type = FileType as file_type
FIELDALIAS-fwcloud_http_category = URLCategory as http_category
EVAL-log_subtype = coalesce(Stage, Subtype, SubType, LogSubtype)
FIELDALIAS-fwcloud_packets = PacketsTotal as packets
FIELDALIAS-fwcloud_packets_in = PacketsReceived as packets_in
FIELDALIAS-fwcloud_packets_out = PacketsSent as packets_out
FIELDALIAS-fwcloud_recipient = RecipientEmail as recipient
FIELDALIAS-fwcloud_report_id = ReportID as report_id
FIELDALIAS-fwcloud_rule = Rule as rule
FIELDALIAS-fwcloud_rule_id = RuleUUID as rule_id
FIELDALIAS-fwcloud_sender = SenderEmail as sender
FIELDALIAS-fwcloud_serial_number = DeviceSN as serial_number
EVAL-serial_number = coalesce(DeviceSN, LogSourceID)
FIELDALIAS-fwcloud_server_ip = DestinationAddress as server_ip
FIELDALIAS-fwcloud_server_location = DestinationLocation as server_location
FIELDALIAS-fwcloud_session_end_reason = SessionEndReason as session_end_reason
FIELDALIAS-fwcloud_session_id = SessionID as session_id
EVAL-severity = coalesce(Severity, VendorSeverity)
FIELDALIAS-fwcloud_signature = ThreatName as signature
FIELDALIAS-fwcloud_signature_id = ThreatID as signature_id
FIELDALIAS-fwcloud_src = SourceAddress as src
FIELDALIAS-fwcloud_src_host = SourceDeviceHost as src_host
FIELDALIAS-fwcloud_src_interface = InboundInterface as src_interface
EVAL-src_ip = coalesce(SourceAddress, PublicIPv4)
FIELDALIAS-fwcloud_src_location = SourceLocation as src_location
FIELDALIAS-fwcloud_src_port = SourcePort as src_port
EVAL-src_user = coalesce(SourceUser, SourceUserName)
FIELDALIAS-fwcloud_src_zone = FromZone as src_zone
FIELDALIAS-fwcloud_start_time = SessionStartTime as start_time
FIELDALIAS-fwcloud_threat_category = ThreatCategory as threat_category
FIELDALIAS-fwcloud_threat = ThreatID as threat
FIELDALIAS-fwcloud_threat_name = ThreatName as threat_name 
FIELDALIAS-fwcloud_transport = Protocol as transport
FIELDALIAS-fwcloud_type = LogType as type
FIELDALIAS-fwcloud_log_type = LogType as log_type
EVAL-user = case(SourceUser!="null",'SourceUser',SourceUserName !="null",'SourceUserName',src_user!="null",'src_user',dest_user!="null",'dest_user',recipient!="null",'recipient',sender!="null",'sender',true(),"unknown")
FIELDALIAS-fwcloud_url = URL as url
FIELDALIAS-fwcloud_vendor_action = Action as vendor_action
FIELDALIAS-fwcloud_verdict = Verdict as verdict
EVAL-virtual_system = coalesce(VirtualSystem, VirtualLocation)
FIELDALIAS-fwcloud_vsys = VirtualSystem as vsys
FIELDALIAS-fwcloud_vsys_id = VirtualSystemID as vsys_id
FIELDALIAS-fwcloud_vsys_name = VirtualSystemName as vsys_name

LOOKUP-vendor_action = pan_vendor_action_lookup vendor_action OUTPUT action
FIELDALIAS-src_for_pan_cloud = src_ip as src
FIELDALIAS-dest_for_pan_cloud = dest_ip as dest
FIELDALIAS-dvc_for_pan_cloud = host as dvc

EVAL-dest_name = replace(dest_hostname, "^([^:/]+).*", "\1")

FIELDALIAS-fwcloud_vendor_protocol  = protocol as vendor_protocol

EVAL-category = coalesce(http_category, threat_category)

LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type
LOOKUP-pan_threat_id              = threat_lookup threat_id
LOOKUP-pan_app                    = app_lookup app

# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                  = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                 = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class             = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas

# Firewall System CDL Logs
FIELDALIAS-fwcloud_module = EventName as module

# Firewall CONFIG CDL Logs
FIELDALIAS-fwcloud_admin = AdminUserName as admin
FIELDALIAS-fwcloud_client = Client as client 
FIELDALIAS-fwcloud_cmd =  EventName as cmd
FIELDALIAS-fwcloud_command = EventName as command
FIELDALIAS-fwcloud_configuration_path =  EventPath as configuration_path
FIELDALIAS-fwcloud_host_name = LogSourceName as host_name
FIELDALIAS-fwcloud_path =  EventPath as path
FIELDALIAS-fwcloud_result = EventResult as result

# URL Logs
FIELDALIAS-fwcloud_referrer = Referer as referrer
FIELDALIAS-fwcloud_http_referrer = Referer as http_referrer
FIELDALIAS-fwcloud_content_type = ContentType as content_type
FIELDALIAS-fwcloud_http_content_type = ContentType as http_content_type
FIELDALIAS-fwcloud_http_user_agent = UserAgent as http_user_agent
FIELDALIAS-fwcloud_user_agent = UserAgent as user_agent
FIELDALIAS-fwcloud_http_referrer_name = HTTPRefererFQDN as http_referrer_name
EVAL-http_method = upper(HTTPMethod)
EVAL-http_user_agent_length                     = len(user_agent)
EVAL-url_length                                 = len(url)

# GlobalProtect CDL Logs
FIELDALIAS-fwcloud_auth_method = AuthMethod as auth_method
FIELDALIAS-fwcloud_host_id = HostID as host_id
FIELDALIAS-fwcloud_tunnel_type = TunnelType as tunnel_type
FIELDALIAS-fwcloud_sequence_number = SequenceNo as sequence_number
FIELDALIAS-fwcloud_src_region = SourceRegion as src_region
FIELDALIAS-fwcloud_status = EventStatus as status
FIELDALIAS-fwcloud_status_for_results = EventStatus as result 
FIELDALIAS-fwcloud_stage= Stage as stage
FIELDALIAS-fwcloud_machine_name = EndpointDeviceName as machine_name
FIELDALIAS-fwcloud_public_ip = PublicIPv4 as public_ip
FIELDALIAS-fwcloud_public_ipv6 = PublicIPv6 as public_ipv6
FIELDALIAS-fwcloud_private_ip = PrivateIPv4 as private_ip
FIELDALIAS-fwcloud_private_ipv6 = PrivateIPv6 as private_ipv6
FIELDALIAS-fwcloud_login_duration = LoginDuration as login_duration
EVAL-duration = coalesce(Duration, LoginDuration)

[pan:traps]
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC
TRANSFORMS-sourcetype = pan_threat_traps, pan_analytics_traps, pan_system_traps, pan_config_traps

[pan_threat]
rename = pan:threat

[pan:threat]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_FORMAT = %Y/%m/%d %H:%M:%S

REPORT-search = extract_threat, extract_threat_id, extract_threat_name, extract_dest_hostname, extract_http_referrer_name, extract_major_content_type, extract_filename, extract_url_domain

FIELDALIAS-app                      = app as application
FIELDALIAS-virtual_system           = vsys as virtual_system

# Field Aliases to map sepcific fields to the Splunk Common Information Model--Intrusion Detection
EVAL-vendor_action                  = action
LOOKUP-vendor_action                = pan_vendor_action_lookup vendor_action OUTPUT action
FIELDALIAS-src_for_pan_threat       = src_ip as src
FIELDALIAS-dest_for_pan_threat      = dest_ip as dest
EVAL-dest_name                      = replace(dest_hostname, "^([^:/]+).*", "\1")
FIELDALIAS-dvc_for_pan_threat       = host as dvc
FIELDALIAS-http_content_type_for_pan_threat     = content_type as http_content_type
FIELDALIAS-http_user_agent_for_pan_threat       = user_agent as http_user_agent
FIELDALIAS-http_referrer_for_pan_threat         = referrer as http_referrer
FIELDALIAS-http_referrer_domain_pan_threat      = http_referrer_name as http_referrer_domain
EVAL-http_user_agent_length                     = len(user_agent)
EVAL-url_length                                 = len(url)

#based on https://www.paloaltonetworks.com/documentation/61/pan-os/pan-os/reports-and-logging/syslog-field-descriptions.html
#This is deprecated in PAN-OS 8.0, use threat_category or log_subtype fields instead
#EVAL-signature_type                 = if(match(threat_name, "\(\d+\)$"), case(threat_id >= 8000 AND threat_id <= 8099, "Scan detection(".threat_id.")",threat_id >= 8500 AND threat_id <= 8599, "Flood detection(".threat_id.")",threat_id == 9999, "URL Filtering log(".threat_id.")",threat_id >= 10000 AND threat_id <= 19999, "Spyware phone home detection(".threat_id.")",threat_id >= 20000 AND threat_id <= 29999, "Spyware download detection(".threat_id.")",threat_id >= 30000 AND threat_id <= 44999, "Vulnerability exploit detection(".threat_id.")",threat_id >= 52000 AND threat_id <= 52999, "File type detection(".threat_id.")",threat_id >= 60000 AND threat_id <= 69999, "Data filtering detection(".threat_id.")",threat_id >= 100000 AND threat_id <= 2999999, "Virus detection(".threat_id.")",threat_id >= 3000000 AND threat_id <= 3999999,"WildFire signature feed(".threat_id.")",threat_id >= 4000000 AND threat_id <= 4999999,"DNS Botnet signatures(".threat_id.")",1==1, "Unknown(".threat_id.")"), threat_name)
FIELDALIAS-signature                = threat_name as signature
FIELDALIAS-signature_id             = threat_id as signature_id

# Reformat email related fields
EVAL-sender          = split(replace(sender,"^From: (.*?);?$","\1"),";")
EVAL-recipient       = split(replace(recipient,"^To: (.*?);?$","\1"),";")
EVAL-subject         = replace(subject,"^Sub: ","")

EVAL-user                           = coalesce(src_user,dest_user,recipient,sender,"unknown")
# All url logs have an http_method field, this makes ES and Web Proxy app work better. Also make method uppercase for CIM.
EVAL-http_method                    = if(log_subtype == "url", if(isnull(http_method), "unknown", upper(http_method)), null)
# Misc field is used by pan_url logs for full URL accessed.  Alias to url field.
FIELDALIAS-url_for_pan_threat       = misc as url

# Determine client and server ip address based on direction of flow
EVAL-server_ip       = if(version >= 2049 OR (version < 2049 AND (isnull(direction) OR direction="client-to-server")), dest_ip, src_ip)
EVAL-client_ip       = if(version >= 2049 OR (version < 2049 AND (isnull(direction) OR direction="client-to-server")), src_ip, dest_ip)
# Determine client and server geo location based on direction of flow
EVAL-server_location = if(isnull(direction) OR direction="client-to-server", dest_location, src_location)
EVAL-client_location = if(isnull(direction) OR direction="client-to-server", src_location, dest_location)
# Set report_id field for wildfire logs. report_id could be in report_id or threat_id, depending on PAN-OS version.
EVAL-report_id       = if(log_subtype=="wildfire", coalesce(report_id,threat_id), null())

# In CIM IDS Datamodel, category means the threat category, not the URL category
EVAL-http_category   = if(log_subtype=="url", raw_category, null())
EVAL-verdict         = if(log_subtype=="wildfire", raw_category, null())
EVAL-threat_category = if(log_subtype!="url" AND log_subtype!="file", if(threat_category=="unknown",log_subtype,coalesce(threat_category,log_subtype)), null())
EVAL-category        =  if(log_subtype=="url", if(raw_category!="unknown",raw_category,null()), if(threat_category=="unknown",log_subtype,coalesce(threat_category,log_subtype)))
EVAL-protocol        = case(transport IN ("tcp", "udp"), "ip", transport=="icmp", "icmp", true(), protocol)
EVAL-protocol_version = if(match(coalesce(src_ip,dest_ip),":"), "ipv6", if(match(coalesce(src_ip,dest_ip), "(?:\d+\.\d+\.\d+\.\d+)"),"ipv4", null))
EVAL-vendor_protocol = case(transport IN ("tcp", "udp"), "ip", transport=="icmp", "icmp", true(), protocol)

# Decode hex flags
EVAL-flags           = mvappend(if(floor(tonumber(session_flags,16) / pow(2, 31))%2==0,null(),"pcap"),if(floor(tonumber(session_flags,16) / pow(2, 28))%2==0,null(),"credential_detected"),if(floor(tonumber(session_flags,16) / pow(2, 25))%2==0,null(),"ipv6"),if(floor(tonumber(session_flags,16) / pow(2, 24))%2==0,null(),"decrypted"),if(floor(tonumber(session_flags,16) / pow(2, 23))%2==0,null(),"denied_by_url_filtering"),if(floor(tonumber(session_flags,16) / pow(2, 22))%2==0,null(),"nat"),if(floor(tonumber(session_flags,16) / pow(2, 21))%2==0,null(),"captive_portal"),if(floor(tonumber(session_flags,16) / pow(2, 19))%2==0,null(),"x_forwarded_for"),if(floor(tonumber(session_flags,16) / pow(2, 18))%2==0,null(),"http_proxy"),if(floor(tonumber(session_flags,16) / pow(2, 15))%2==0,null(),"container_page"),if(floor(tonumber(session_flags,16) / pow(2, 13))%2==0,null(),"implicit_application"),if(floor(tonumber(session_flags,16) / pow(2, 11))%2==0,null(),"symmetric_return"))

LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type
LOOKUP-pan_threat_id              = threat_lookup threat_id
LOOKUP-pan_app                    = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                  = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                 = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class             = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas


[pan_traffic]
rename = pan:traffic

[pan:traffic]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_FORMAT = %Y/%m/%d %H:%M:%S

REPORT-search = extract_traffic

FIELDALIAS-app                       = app as application
FIELDALIAS-virtual_system            = vsys as virtual_system
# Field Aliases to map specific fields to the Splunk Common Information Model - Network Traffic
EVAL-vendor_action                   = action
LOOKUP-vendor_action                 = pan_vendor_action_lookup vendor_action OUTPUT action
# bytes, bytes_in, bytes_out
FIELDALIAS-dest_for_pan_traffic      = dest_ip as dest
EVAL-dvc                             = coalesce(dvc_name, host)
FIELDALIAS-src_for_pan_traffic       = src_ip as src
FIELDALIAS-session_start_signature   = rule as signature
EVAL-protocol                        = case(transport IN ("tcp", "udp"), "ip", transport=="icmp", "icmp", true(), protocol)
EVAL-protocol_version                = if(match(coalesce(src_ip,dest_ip),":"), "ipv6", if(match(coalesce(src_ip,dest_ip), "(?:\d+\.\d+\.\d+\.\d+)"),"ipv4", null))
EVAL-vendor_protocol                 = case(transport IN ("tcp", "udp"), "ip", transport=="icmp", "icmp", true(), protocol)

# Set user field
EVAL-user                            = coalesce(src_user,dest_user,"unknown")
# Determine client and server ip address based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_ip                       =  dest_ip
EVAL-client_ip                       =  src_ip
# Determine client and server geo location based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_location                 = dest_location
EVAL-client_location                 = src_location

LOOKUP-vendor_info_for_pan_config    = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
LOOKUP-pan_app                       = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges,as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                     = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                    = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class                = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas

# Decode hex flags
EVAL-flags           = mvappend(if(floor(tonumber(session_flags,16) / pow(2, 31))%2==0,null(),"pcap"),if(floor(tonumber(session_flags,16) / pow(2, 25))%2==0,null(),"ipv6"),if(floor(tonumber(session_flags,16) / pow(2, 24))%2==0,null(),"decrypted"),if(floor(tonumber(session_flags,16) / pow(2, 23))%2==0,null(),"denied_by_url_filtering"),if(floor(tonumber(session_flags,16) / pow(2, 22))%2==0,null(),"nat"),if(floor(tonumber(session_flags,16) / pow(2, 21))%2==0,null(),"captive_portal"),if(floor(tonumber(session_flags,16) / pow(2, 19))%2==0,null(),"x_forwarded_for"),if(floor(tonumber(session_flags,16) / pow(2, 18))%2==0,null(),"http_proxy"),if(floor(tonumber(session_flags,16) / pow(2, 15))%2==0,null(),"container_page"),if(floor(tonumber(session_flags,16) / pow(2, 13))%2==0,null(),"implicit_application"),if(floor(tonumber(session_flags,16) / pow(2, 11))%2==0,null(),"symmetric_return"))


[pan_system]
rename = pan:system

[pan:system]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_system, extract_globalprotect_user, extract_globalprotect_ip, extract_globalprotect_loginip, extract_globalprotect_clientversion, extract_globalprotect_message, extract_general_user, extract_system_alert_src, extract_system_auth

FIELDALIAS-virtual_system         = vsys as virtual_system
# Field Aliases to map specific fields to the Splunk Common Information Model - Update
FIELDALIAS-dvc_for_pan_system     = host as dvc
FIELDALIAS-dest_for_pan_system    = host as dest
FIELDALIAS-signature              = event_id as signature
FIELDALIAS-src_user               = user as src_user
FIELDALIAS-reason                 = description as reason
FIELDALIAS-body                   = description as body
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
EVAL-action = case(match(description,"(?i)succeeded"),"success",match(description,"(?i)cleared"),"cleared",match(description,"(?i)GlobalProtect gateway agent message"),"success",match(description,"(?i)Failed"),"failure")
EVAL-app = "Palo Alto Networks Firewall"
EVAL-type = "event"
EVAL-src = coalesce(src,src_ip)


# GlobalProtect logs introduced in PANOS 9.1
[pan_globalprotect]
rename = pan:globalprotect

[pan:globalprotect]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
REPORT-search = extract_globalprotect

FIELDALIAS-type = log_type as type 
FIELDALIAS-status_for_results = status as result 
FIELDALIAS-stage_for_log_subtype = stage as log_subtype 
EVAL-dvc_name = coalesce(dvc_name, machine_name)
FIELDALIAS-public_ip_for_src_ip = public_ip as src_ip
FIELDALIAS-private_ip_for_client_ip = private_ip as client_ip
FIELDALIAS-opaque_for_description = opaque as description 
FIELDALIAS-src_user_for_user= src_user as user 
FIELDALIAS-login_duration_for_duration= login_duration as duration 


[pan_decryption]
rename = pan:decryption

[pan:decryption]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_decryption

FIELDALIAS-type = log_type as type 

[pan_config]
rename = pan:config

[pan:config]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_config


FIELDALIAS-virtual_system      = vsys as virtual_system
FIELDALIAS-cmd                 = command as cmd
FIELDALIAS-config              = configuration_path as path
# Field Aliases to map specific fields to the Splunk Common Information Model - Change Analysis
FIELDALIAS-dvc_for_pan_config  = host as dvc
FIELDALIAS-dest_for_pan_config = host as dest
FIELDALIAS-src_for_pan_config = host_name as src
FIELDALIAS-user_for_pan_config = admin as user
FIELDALIAS-src_user_for_pan_config = admin as src_user

EVAL-status = if(result=="Succeeded" OR result=="Submitted", "success", null)

# Manually set log_subtype because it isn't in the log
EVAL-log_subtype = "config"
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product


[pan:hipmatch]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_hipmatch

FIELDALIAS-type                     = log_type as type 
FIELDALIAS-virtual_system           = vsys as virtual_system

# Field Aliases to map specific fields to the Splunk Common Information Model--Intrusion Detection
FIELDALIAS-src_for_pan_hipmatch     = src_ip as src
FIELDALIAS-dvc_for_pan_hipmatch     = host as dvc
FIELDALIAS-user_for_pan_hipmatch    = src_user as user

LOOKUP-vendor_info_for_pan_hipmatch = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                    = classification_lookup cidr as src_ip OUTPUT classification as src_class


[pan:correlation]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_FORMAT = %Y/%m/%d %H:%M:%S
REPORT-search = extract_correlation
FIELDALIAS-virtual_system              = vsys as virtual_system
FIELDALIAS-src_for_pan_correlation     = src_ip as src
FIELDALIAS-client_ip                   = src_ip as client_ip
FIELDALIAS-dest_for_pan_correlation    = host as dest
FIELDALIAS-dvc_for_pan_correlation     = host as dvc
FIELDALIAS-user_for_pan_correlation    = src_user as user
EVAL-log_subtype                       = "correlation"
FIELDALIAS-category                    = object AS category
FIELDALIAS-threat_category             = object AS threat_category
FIELDALIAS-threat_name                 = evidence AS threat_name
FIELDALIAS-signature                   = evidence AS signature
FIELDALIAS-body                        = evidence AS body
EVAL-vendor_action                     = "allowed"
EVAL-action                            = "allowed"
EVAL-type                              = case(severity IN ("informational","low","medium"),"event",severity IN ("high","critical"),"alert",1==1,log_type)
EVAL-app                               = "Palo Alto Networks Firewall"


[pan:userid]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
REPORT-search = extract_userid
FIELDALIAS-type                        = log_type as type 
FIELDALIAS-virtual_system              = vsys as virtual_system
FIELDALIAS-src_for_pan_correlation     = src_ip as src
FIELDALIAS-dest_ip_for_pan_correlation = src_ip as dest_ip
FIELDALIAS-client_ip                   = src_ip as client_ip
FIELDALIAS-dest_for_pan_correlation    = src_ip as dest
FIELDALIAS-dvc_for_pan_correlation     = host as dvc
EVAL-user                              = coalesce(src_user,"unknown")


[pan:analytics_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_analytics

FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
EVAL-os_type      = case(os_type==1, "windows", os_type==2, "mac", os_type==3, "android", os_type==4, "linux", true(), "unknown")
LOOKUP-vendor_info_for_pan_analytics_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan:threat_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_threat, extract_traps_type, extract_eventparam_json, extract_processes_json, extract_files_json, extract_users_json, extract_urls_json, extract_traps_threat_name

FIELDALIAS-category         = module_id as category
FIELDALIAS-signature        = module_id as signature
FIELDALIAS-threat_category  = module_id as threat_category
FIELDALIAS-client_ip        = dest_ip as client_ip
FIELDALIAS-product_version  = agent_version as product_version
FIELDALIAS-endpoint_version = agent_version as endpoint_version
FIELDALIAS-action           = vendor_action as action
FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-dest                   = coalesce(dest_ip,dest_host)
EVAL-verdict      = case(verdict==0, "benign", verdict==1, "malware", verdict==2, "grayware", verdict==4, "phishing", true(), "unknown")
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
EVAL-os_type      = case(os_type==1, "windows", os_type==2, "mac", os_type==3, "android", os_type==4, "linux", true(), "unknown")
EVAL-eventparam_json  = replace(substr(eventparams_json, 2, len(eventparams_json)-2), "\"\"", "\"")
EVAL-processes_json   = replace(substr(processes_json, 2, len(processes_json)-2), "\"\"", "\"")
EVAL-files_json       = replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\"")
EVAL-users_json       = replace(substr(users_json, 2, len(users_json)-2), "\"\"", "\"")
EVAL-urls_json        = replace(substr(urls_json, 2, len(urls_json)-2), "\"\"", "\"")
EVAL-command          = spath(replace(substr(processes_json, 2, len(processes_json)-2), "\"\"", "\""), "{}.commandLine")
EVAL-pid              = spath(replace(substr(processes_json, 2, len(processes_json)-2), "\"\"", "\""), "{}.pid")
EVAL-file_name        = spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.fileName")
EVAL-file_path        = spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.rawFullPath")
EVAL-file_hash        = lower(spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.sha256"))
EVAL-file_size        = spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.fileSize")
EVAL-user             = spath(replace(substr(users_json, 2, len(users_json)-2), "\"\"", "\""), "{}.userName")
LOOKUP-vendor_info_for_pan_threat_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan:system_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_config-system

FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
LOOKUP-vendor_info_for_pan_system_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan:config_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_config-system

FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
LOOKUP-vendor_info_for_pan_config_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan_aperture]
rename = pan:aperture

[pan:aperture]
TIME_PREFIX=timestamp\"\: \"
TIME_FORMAT=%Y-%m-%dT%H:%M:%S%z
MAX_TIMESTAMP_LOOKAHEAD=25
KV_MODE                     = JSON
SHOULD_LINEMERGE            = false
EVAL-dvc                    = "aperture"
EVAL-src_user               = coalesce(user, item_owner, admin_id)
EVAL-user                   = coalesce(user, item_owner, admin_id)
FIELDALIAS-admin            = action_taken_by as admin
FIELDALIAS-log_subtype      = log_type as log_subtype
FIELDALIAS-object           = item_name as object
FIELDALIAS-file_name        = item_name as file_name
FIELDALIAS-app              = cloud_app_instance as app
FIELDALIAS-object_path      = asset_id as object_path
FIELDALIAS-object_creator   = item_creator as object_creator
FIELDALIAS-object_category  = item_type as object_category
FIELDALIAS-category         = incident_category as category
FIELDALIAS-threat_category  = incident_category as threat_category
EVAL-threat_name            = coalesce(policy_rule_name,log_subtype)
LOOKUP-vendor_info_for_pan_aperture = pan_vendor_info_lookup sourcetype OUTPUTNEW vendor,product,vendor_product, vendor_product as app

EVAL-src                    = coalesce(ip, source_ip)
EVAL-type                   = if(log_type IN ("incident", "remediation"), "alert", "event")
FIELDALIAS-user_role        = admin_role as user_role
FIELDALIAS-id               = incident_id as id
FIELDALIAS-signature_id     = policy_rule_name as signature_id
FIELDALIAS-severity_id      = severity as severity_id
EVAL-action                 = coalesce(case(action IN ("sign_in", "sign_out"), "success"), action, action_taken)
EVAL-client_ip              = coalesce(source_ip, ip)
EVAL-src_ip                 = coalesce(source_ip, ip)
EVAL-signature              = coalesce(policy_rule_name, event_type)
EVAL-severity               = case(severity <= 1, "informational", severity <=2, "low", severity <=3, "medium", severity <=4, "high", severity <=5, "critical")

[pan:minemeld]
SHOULD_LINEMERGE = 0
pulldown_type = 1

[pan:iot_alert]
FIELDALIAS-iot_alert_description = msg.description AS description
FIELDALIAS-iot_alert_app = msg.appName AS app
FIELDALIAS-iot_alert_dest = msg.toip AS dest
FIELDALIAS-iot_alert_src = msg.fromip AS src
FIELDALIAS-iot_alert_signature_id = msg.ruleid AS signature_id
FIELDALIAS-iot_alert_user = deviceid AS user
FIELDALIAS-iot_alert_dest_type = profile AS dest_type
FIELDALIAS-iot_alert_severity_id = severityNumber AS severity_id
FIELDALIAS-iot_alert_signature = name AS signature
FIELDALIAS-iot_alert_src_type = profile AS src_type
FIELDALIAS-iot_alert_subject = name AS subject
FIELDALIAS-iot_alert_body = msg.description AS body
FIELDALIAS-iot_alert_vendor_account = siteid AS vendor_account
FIELDALIAS-iot_alert_vendor_region = tenantid AS vendor_region
LOOKUP-vendor_info_for_pan_iot_alert = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
SHOULD_LINEMERGE = 0
TIME_PREFIX = date\"\: \"
TRUNCATE = 15000
pulldown_type = 1

[pan:iot_vulnerability]
FIELDALIAS-iot_vulnerability_severity_id = risk_score AS severity_id
FIELDALIAS-iot_vulnerability_cve = vulnerability_name AS cve
FIELDALIAS-iot_vulnerability_signature_id = zb_ticketid AS signature_id
FIELDALIAS-iot_vulnerability_severity = risk_level AS severity
FIELDALIAS-iot_vulnerability_dest = ip AS dest
FIELDALIAS-iot_vulnerability_dvc = deviceid AS dvc
LOOKUP-vendor_info_for_pan_iot_vulnerability = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
SHOULD_LINEMERGE = 0
TIME_PREFIX = date\"\: \"
pulldown_type = 1

[pan:iot_device]
FIELDALIAS-iot_device_mac = MAC AS mac
FIELDALIAS-iot_device_enabled = in_use AS enabled
FIELDALIAS-iot_device_version = os/firmware_version AS version
FIELDALIAS-iot_device_os = os_combined AS os
FIELDALIAS-iot_device_family = profile AS family
FIELDALIAS-iot_device_serial = Serial_Number AS serial
FIELDALIAS-iot_device_ip = ip_address AS ip
FIELDALIAS-iot_device_user = AD_Username AS user
LOOKUP-vendor_info_for_pan_iot_device = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
SHOULD_LINEMERGE = 0
TIME_PREFIX = last_activity\"\: \"
pulldown_type = 1

[pan:xdr_incident]
KV_MODE = JSON
SHOULD_LINEMERGE = 0
pulldown_type = 1
TIME_PREFIX =  modification_time\"\: \"
EVAL-app = "Cortex XDR"
EVAL-assigned_user_pretty_name = replace(assigned_user_pretty_name,"null", "UNASSIGNED")
EVAL-score = coalesce(if(manual_score="null", null(), manual_score), if(rule_based_score="null", null(), rule_based_score)) 
EVAL-type = "event"
FIELDALIAS-incident_id = incident_id AS id
FIELDALIAS-users = users{} AS user 
FIELDALIAS-hosts = hosts AS dest
FIELDALIAS-score = score AS severity_id
FIELDALIAS-description = description AS signature
FIELDALIAS-incident_sources = incident_sources{} as src_type

