[pan_log]
pulldown_type = false
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 100
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_traps4, pan_threat_traps, pan_analytics_traps, pan_system_traps, pan_config_traps, pan_decryption

# Adjusts PAN-OS 6.1.0 threat logs to revised 6.1.1+ format where
# the reportid field is at the end.
# Uncomment this if you need to index PAN-OS 6.1.0 threat logs
# SEDCMD-6_1_0 = s/^((?:[^,]+,){3}THREAT,(?:[^,]*,){27}".*",[^,]*,)(\d+),((?:[^,]*,){3})(\d+,0x\d+,(?:[^,]*,){14})$/\1\3\4,\2/

[pan:log]
category = Network & Security
description = Palo Alto Networks Next-generation Firewall and Traps Endpoint Protection
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 100
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_traps4, pan_threat_traps, pan_analytics_traps, pan_system_traps, pan_config_traps, pan_decryption

# Adjusts PAN-OS 6.1.0 threat logs to revised 6.1.1+ format where
# the reportid field is at the end.
# Uncomment this if you need to index PAN-OS 6.1.0 threat logs
# SEDCMD-6_1_0 = s/^((?:[^,]+,){3}THREAT,(?:[^,]*,){27}".*",[^,]*,)(\d+),((?:[^,]*,){3})(\d+,0x\d+,(?:[^,]*,){14})$/\1\3\4,\2/

[pan:firewall]
category = Network & Security
description = Syslog from Palo Alto Networks Next-generation Firewall
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_traps4

# Adjusts PAN-OS 6.1.0 threat logs to revised 6.1.1+ format where
# the reportid field is at the end.
# Uncomment this if you need to index PAN-OS 6.1.0 threat logs
# SEDCMD-6_1_0 = s/^((?:[^,]+,){3}THREAT,(?:[^,]*,){27}".*",[^,]*,)(\d+),((?:[^,]*,){3})(\d+,0x\d+,(?:[^,]*,){14})$/\1\3\4,\2/

[pan:traps]
category = Network & Security
description = Syslog from Palo Alto Networks Traps Endpoint Protection
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC
TRANSFORMS-sourcetype = pan_traps4, pan_threat_traps, pan_analytics_traps, pan_system_traps, pan_config_traps

[pan_threat]
rename = pan:threat

[pan:threat]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_threat, extract_threat_id, extract_threat_name, extract_dest_hostname, extract_http_referrer_name, extract_major_content_type, extract_filename

FIELDALIAS-app                      = app as application
FIELDALIAS-virtual_system           = vsys as virtual_system

# Field Aliases to map sepcific fields to the Splunk Common Information Model--Intrusion Detection
EVAL-vendor_action                  = action
LOOKUP-vendor_action                = pan_vendor_action_lookup vendor_action OUTPUT action
FIELDALIAS-src_for_pan_threat       = src_ip as src
FIELDALIAS-dest_for_pan_threat      = dest_ip as dest
FIELDALIAS-dest_name_for_pan_threat = dest_hostname as dest_name
FIELDALIAS-dvc_for_pan_threat       = host as dvc
FIELDALIAS-http_content_type_for_pan_threat     = content_type as http_content_type
FIELDALIAS-http_user_agent_for_pan_threat       = user_agent as http_user_agent
FIELDALIAS-http_referrer_for_pan_threat         = referrer as http_referrer
EVAL-http_user_agent_length                     = len(user_agent)
EVAL-url_length                                 = len(url)

#based on https://www.paloaltonetworks.com/documentation/61/pan-os/pan-os/reports-and-logging/syslog-field-descriptions.html
#This is deprecated in PAN-OS 8.0, use threat_category or log_subtype fields instead
#EVAL-signature_type                 = if(match(threat_name, "\(\d+\)$"), case(threat_id >= 8000 AND threat_id <= 8099, "Scan detection(".threat_id.")",threat_id >= 8500 AND threat_id <= 8599, "Flood detection(".threat_id.")",threat_id == 9999, "URL Filtering log(".threat_id.")",threat_id >= 10000 AND threat_id <= 19999, "Spyware phone home detection(".threat_id.")",threat_id >= 20000 AND threat_id <= 29999, "Spyware download detection(".threat_id.")",threat_id >= 30000 AND threat_id <= 44999, "Vulnerability exploit detection(".threat_id.")",threat_id >= 52000 AND threat_id <= 52999, "File type detection(".threat_id.")",threat_id >= 60000 AND threat_id <= 69999, "Data filtering detection(".threat_id.")",threat_id >= 100000 AND threat_id <= 2999999, "Virus detection(".threat_id.")",threat_id >= 3000000 AND threat_id <= 3999999,"WildFire signature feed(".threat_id.")",threat_id >= 4000000 AND threat_id <= 4999999,"DNS Botnet signatures(".threat_id.")",1==1, "Unknown(".threat_id.")"), threat_name)
FIELDALIAS-signature                = threat_name as signature
FIELDALIAS-signature_id             = threat_id as signature_id

# Reformat email related fields
EVAL-sender          = split(replace(sender,"^From: (.*?);?$","\1"),";")
EVAL-recipient       = split(replace(recipient,"^To: (.*?);?$","\1"),";")
EVAL-subject         = replace(subject,"^Sub: ","")

EVAL-user                           = coalesce(src_user,dest_user,recipient,sender,"unknown")
# All url logs have an http_method field, this makes ES and Web Proxy app work better. Also make method uppercase for CIM.
EVAL-http_method                    = if(log_subtype == "url", if(isnull(http_method), "unknown", upper(http_method)), null)
# Misc field is used by pan_url logs for full URL accessed.  Alias to url field.
FIELDALIAS-url_for_pan_threat       = misc as url

FIELDALIAS-protocol_for_pan_threat  = protocol as vendor_protocol

# Determine client and server ip address based on direction of flow
EVAL-server_ip       = if(version >= 2049 OR (version < 2049 AND (isnull(direction) OR direction="client-to-server")), dest_ip, src_ip)
EVAL-client_ip       = if(version >= 2049 OR (version < 2049 AND (isnull(direction) OR direction="client-to-server")), src_ip, dest_ip)
# Determine client and server geo location based on direction of flow
EVAL-server_location = if(isnull(direction) OR direction="client-to-server", dest_location, src_location)
EVAL-client_location = if(isnull(direction) OR direction="client-to-server", src_location, dest_location)
# Set report_id field for wildfire logs. report_id could be in report_id or threat_id, depending on PAN-OS version.
EVAL-report_id       = if(log_subtype=="wildfire", coalesce(report_id,threat_id), null())

# In CIM IDS Datamodel, category means the threat category, not the URL category
EVAL-http_category   = if(log_subtype=="url", raw_category, null())
EVAL-verdict         = if(log_subtype=="wildfire", raw_category, null())
EVAL-threat_category = if(log_subtype!="url" AND log_subtype!="file", if(threat_category=="unknown",log_subtype,coalesce(threat_category,log_subtype)), null())
EVAL-category        = if(log_subtype=="url" OR log_subtype=="file", raw_category, threat_category)

# Decode hex flags
EVAL-flags           = mvappend(if(floor(tonumber(session_flags,16) / pow(2, 31))%2==0,null(),"pcap"),if(floor(tonumber(session_flags,16) / pow(2, 28))%2==0,null(),"credential_detected"),if(floor(tonumber(session_flags,16) / pow(2, 25))%2==0,null(),"ipv6"),if(floor(tonumber(session_flags,16) / pow(2, 24))%2==0,null(),"decrypted"),if(floor(tonumber(session_flags,16) / pow(2, 23))%2==0,null(),"denied_by_url_filtering"),if(floor(tonumber(session_flags,16) / pow(2, 22))%2==0,null(),"nat"),if(floor(tonumber(session_flags,16) / pow(2, 21))%2==0,null(),"captive_portal"),if(floor(tonumber(session_flags,16) / pow(2, 19))%2==0,null(),"x_forwarded_for"),if(floor(tonumber(session_flags,16) / pow(2, 18))%2==0,null(),"http_proxy"),if(floor(tonumber(session_flags,16) / pow(2, 15))%2==0,null(),"container_page"),if(floor(tonumber(session_flags,16) / pow(2, 13))%2==0,null(),"implicit_application"),if(floor(tonumber(session_flags,16) / pow(2, 11))%2==0,null(),"symmetric_return"))

LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type
LOOKUP-pan_threat_id              = threat_lookup threat_id
LOOKUP-pan_app                    = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                  = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                 = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class             = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas

# MineMeld indicator lookup
LOOKUP-minemeldfeeds_src_lookup          = minemeldfeeds_lookup indicator AS src_ip OUTPUT value.autofocus_tags AS src_autofocus_tags
LOOKUP-minemeldfeeds_dest_lookup         = minemeldfeeds_lookup indicator AS dest_ip OUTPUT value.autofocus_tags AS dest_autofocus_tags


[pan_traffic]
rename = pan:traffic

[pan:traffic]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_traffic

FIELDALIAS-app                       = app as application
FIELDALIAS-virtual_system            = vsys as virtual_system
# Field Aliases to map specific fields to the Splunk Common Information Model - Network Traffic
EVAL-vendor_action                   = action
LOOKUP-vendor_action                 = pan_vendor_action_lookup vendor_action OUTPUT action
# bytes, bytes_in, bytes_out
FIELDALIAS-dest_for_pan_traffic      = dest_ip as dest
FIELDALIAS-dvc_for_pan_traffic       = host as dvc
FIELDALIAS-protocol_for_pan_traffic  = protocol as vendor_protocol
FIELDALIAS-src_for_pan_traffic       = src_ip as src

# Set user field
EVAL-user                            = coalesce(src_user,dest_user,"unknown")
# Determine client and server ip address based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_ip                       =  dest_ip
EVAL-client_ip                       =  src_ip
# Determine client and server geo location based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_location                 = dest_location
EVAL-client_location                 = src_location

LOOKUP-vendor_info_for_pan_config    = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
LOOKUP-pan_app                       = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges,as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                     = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                    = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class                = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas

# Decode hex flags
EVAL-flags           = mvappend(if(floor(tonumber(session_flags,16) / pow(2, 31))%2==0,null(),"pcap"),if(floor(tonumber(session_flags,16) / pow(2, 25))%2==0,null(),"ipv6"),if(floor(tonumber(session_flags,16) / pow(2, 24))%2==0,null(),"decrypted"),if(floor(tonumber(session_flags,16) / pow(2, 23))%2==0,null(),"denied_by_url_filtering"),if(floor(tonumber(session_flags,16) / pow(2, 22))%2==0,null(),"nat"),if(floor(tonumber(session_flags,16) / pow(2, 21))%2==0,null(),"captive_portal"),if(floor(tonumber(session_flags,16) / pow(2, 19))%2==0,null(),"x_forwarded_for"),if(floor(tonumber(session_flags,16) / pow(2, 18))%2==0,null(),"http_proxy"),if(floor(tonumber(session_flags,16) / pow(2, 15))%2==0,null(),"container_page"),if(floor(tonumber(session_flags,16) / pow(2, 13))%2==0,null(),"implicit_application"),if(floor(tonumber(session_flags,16) / pow(2, 11))%2==0,null(),"symmetric_return"))

# MineMeld indicator lookup
LOOKUP-minemeldfeeds_src_lookup          = minemeldfeeds_lookup indicator AS src_ip OUTPUT value.autofocus_tags AS src_autofocus_tags
LOOKUP-minemeldfeeds_dest_lookup         = minemeldfeeds_lookup indicator AS dest_ip OUTPUT value.autofocus_tags AS dest_autofocus_tags

[pan_system]
rename = pan:system

[pan:system]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_system, extract_globalprotect_user, extract_globalprotect_ip, extract_globalprotect_loginip, extract_globalprotect_clientversion, extract_globalprotect_message

FIELDALIAS-virtual_system         = vsys as virtual_system
# Field Aliases to map specific fields to the Splunk Common Information Model - Update
FIELDALIAS-dvc_for_pan_system     = host as dvc
FIELDALIAS-dest_for_pan_system    = host as dest
FIELDALIAS-signature              = event_id as signature
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product

# GlobalProtect logs introduced in PANOS 9.1
[pan_globalprotect]
rename = pan:globalprotect

[pan:globalprotect]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
REPORT-search = extract_globalprotect
FIELDALIAS-status_for_results = status as result 
FIELDALIAS-stage_for_log_subtype = stage as log_subtype 
FIELDALIAS-machine_name_for_dvc_name = machine_name as dvc_name 
FIELDALIAS-public_ip_for_src_ip = public_ip as src_ip
FIELDALIAS-private_ip_for_client_ip = private_ip as client_ip
FIELDALIAS-opaque_for_description = opaque as description 
FIELDALIAS-src_user_for_user= src_user as user 
FIELDALIAS-login_duration_for_duration= login_duration as duration 


[pan_decryption]
rename = pan:decryption

[pan:decryption]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_decryption


[pan_config]
rename = pan:config

[pan:config]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_config


FIELDALIAS-virtual_system      = vsys as virtual_system
FIELDALIAS-cmd                 = command as cmd
FIELDALIAS-config              = configuration_path as path
# Field Aliases to map specific fields to the Splunk Common Information Model - Change Analysis
FIELDALIAS-dvc_for_pan_config  = host as dvc
FIELDALIAS-dest_for_pan_config = host as dest

# Manually set log_subtype because it isn't in the log
EVAL-log_subtype = "config"
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product


[pan:hipmatch]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_hipmatch

FIELDALIAS-virtual_system           = vsys as virtual_system

# Field Aliases to map specific fields to the Splunk Common Information Model--Intrusion Detection
FIELDALIAS-src_for_pan_hipmatch     = src_ip as src
FIELDALIAS-dvc_for_pan_hipmatch     = host as dvc
FIELDALIAS-user_for_pan_hipmatch    = src_user as user

LOOKUP-vendor_info_for_pan_hipmatch = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                    = classification_lookup cidr as src_ip OUTPUT classification as src_class


[pan:correlation]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
REPORT-search = extract_correlation
FIELDALIAS-virtual_system              = vsys as virtual_system
FIELDALIAS-src_for_pan_correlation     = src_ip as src
FIELDALIAS-dest_ip_for_pan_correlation = src_ip as dest_ip
FIELDALIAS-client_ip                   = src_ip as client_ip
FIELDALIAS-dest_for_pan_correlation    = src_ip as dest
FIELDALIAS-dvc_for_pan_correlation     = host as dvc
EVAL-user                              = coalesce(src_user,"unknown")
FIELDALIAS-user_for_pan_correlation    = src_user as dest_user
EVAL-log_subtype                       = "correlation"
FIELDALIAS-category                    = object AS category
FIELDALIAS-threat_category             = object AS threat_category
FIELDALIAS-threat_name                 = evidence AS threat_name
FIELDALIAS-signature                   = evidence AS signature
EVAL-vendor_action                     = "allowed"
EVAL-action                            = "allowed"


[pan:userid]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
REPORT-search = extract_userid
FIELDALIAS-virtual_system              = vsys as virtual_system
FIELDALIAS-src_for_pan_correlation     = src_ip as src
FIELDALIAS-dest_ip_for_pan_correlation = src_ip as dest_ip
FIELDALIAS-client_ip                   = src_ip as client_ip
FIELDALIAS-dest_for_pan_correlation    = src_ip as dest
FIELDALIAS-dvc_for_pan_correlation     = host as dvc
EVAL-user                              = coalesce(src_user,"unknown")


[pan_endpoint]
rename = pan:traps4
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 32

[pan:endpoint]
rename = pan:traps4
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 32

[pan:traps4]
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_endpoint_pipes, extract_date, extract_endpoint_additional_data, extract_endpoint_preventionkey, extract_endpoint_content_version

EVAL-user                   = coalesce(duser,suser,"unknown")
EVAL-dest_nt_domain         = mvindex(split(user,"\\"),0)
FIELDALIAS-product_version  = endpoint_version as product_version
FIELDALIAS-vendor_product   = product as vendor_product
EVAL-file_hash              = lower(fileHash)
FIELDALIAS-file_name        = deviceProcessName as file_name
FIELDALIAS-src              = shost as src
FIELDALIAS-src_host         = shost as src_host
FIELDALIAS-dest_host        = dhost as dest_host
FIELDALIAS-dest_name        = dhost as dest_name
FIELDALIAS-dvc_host         = dhost as dvc_host
FIELDALIAS-dest_ip          = dvc as dest_ip
FIELDALIAS-client_ip        = dvc as client_ip
FIELDALIAS-dvc_ip           = dvc as dvc_ip
FIELDALIAS-category         = cs2 as category
FIELDALIAS-signature        = cs2 as signature
FIELDALIAS-threat_category  = cs2 as threat_category
EVAL-threat_name            = coalesce(cs2,cs2Label,log_subtype)
EVAL-dest                   = coalesce(dest_ip,dest_host)

LOOKUP-endpoint_action      = endpoint_actions_lookup log_subtype OUTPUT action
LOOKUP-endpoint_severity    = endpoint_severity_lookup severity_code OUTPUT severity

FIELDALIAS-vendor_action    = action as vendor_action
LOOKUP-vendor_info_for_pan_traps4 = pan_vendor_info_lookup sourcetype OUTPUT vendor,ids_type


[pan:analytics_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_analytics

FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
EVAL-os_type      = case(os_type==1, "windows", os_type==2, "mac", os_type==3, "android", os_type==4, "linux", true(), "unknown")
LOOKUP-vendor_info_for_pan_analytics_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan:threat_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_threat, extract_traps_type, extract_eventparam_json, extract_processes_json, extract_files_json, extract_users_json, extract_urls_json, extract_traps_threat_name

FIELDALIAS-category         = module_id as category
FIELDALIAS-signature        = module_id as signature
FIELDALIAS-threat_category  = module_id as threat_category
FIELDALIAS-client_ip        = dest_ip as client_ip
FIELDALIAS-product_version  = agent_version as product_version
FIELDALIAS-endpoint_version = agent_version as endpoint_version
FIELDALIAS-action           = vendor_action as action
FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-dest                   = coalesce(dest_ip,dest_host)
EVAL-verdict      = case(verdict==0, "benign", verdict==1, "malware", verdict==2, "grayware", verdict==4, "phishing", true(), "unknown")
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
EVAL-os_type      = case(os_type==1, "windows", os_type==2, "mac", os_type==3, "android", os_type==4, "linux", true(), "unknown")
EVAL-eventparam_json  = replace(substr(eventparams_json, 2, len(eventparams_json)-2), "\"\"", "\"")
EVAL-processes_json   = replace(substr(processes_json, 2, len(processes_json)-2), "\"\"", "\"")
EVAL-files_json       = replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\"")
EVAL-users_json       = replace(substr(users_json, 2, len(users_json)-2), "\"\"", "\"")
EVAL-urls_json        = replace(substr(urls_json, 2, len(urls_json)-2), "\"\"", "\"")
EVAL-command          = spath(replace(substr(processes_json, 2, len(processes_json)-2), "\"\"", "\""), "{}.commandLine")
EVAL-pid              = spath(replace(substr(processes_json, 2, len(processes_json)-2), "\"\"", "\""), "{}.pid")
EVAL-file_name        = spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.fileName")
EVAL-file_path        = spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.rawFullPath")
EVAL-file_hash        = lower(spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.sha256"))
EVAL-file_size        = spath(replace(substr(files_json, 2, len(files_json)-2), "\"\"", "\""), "{}.fileSize")
EVAL-user             = spath(replace(substr(users_json, 2, len(users_json)-2), "\"\"", "\""), "{}.userName")
LOOKUP-vendor_info_for_pan_threat_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan:system_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_config-system

FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
LOOKUP-vendor_info_for_pan_system_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan:config_traps]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 32
TZ = UTC

REPORT-search = extract_traps_config-system

FIELDALIAS-src_host         = traps_id as src_host
FIELDALIAS-src              = traps_id as src
EVAL-log_severity = case(log_severity==0, "critical", log_severity==1, "error", log_severity==2, "warning", log_severity==3, "notice", log_severity==4, "info", true(), "unknown")
EVAL-severity     = case(severity==0, "critical", severity==1, "high", severity==2, "medium", severity==3, "low", severity==4, "informational", log_severity==5, "configuration", true(), "unknown")
LOOKUP-vendor_info_for_pan_config_traps = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type


[pan_aperture]
rename = pan:aperture

[pan:aperture]
TIME_PREFIX=timestamp\"\: \"
TIME_FORMAT=%Y-%m-%dT%H:%M:%S%z
MAX_TIMESTAMP_LOOKAHEAD=25
KV_MODE                     = JSON
SHOULD_LINEMERGE            = false
EVAL-action                 = coalesce(action, action_taken, "unknown")
EVAL-dvc                    = "aperture"
EVAL-src_user               = coalesce(user, item_owner)
EVAL-user                   = coalesce(user, item_owner)
FIELDALIAS-admin            = action_taken_by as admin
FIELDALIAS-log_subtype      = log_type as log_subtype
FIELDALIAS-object           = item_name as object
FIELDALIAS-file_name        = item_name as file_name
FIELDALIAS-app              = cloud_app_instance as app
FIELDALIAS-object_path      = asset_id as object_path
FIELDALIAS-object_creator   = item_creator as object_creator
FIELDALIAS-object_category  = item_type as object_category
FIELDALIAS-category         = incident_category as category
FIELDALIAS-threat_category  = incident_category as threat_category
FIELDALIAS-signature        = policy_rule_name as signature
FIELDALIAS-src_ip           = source_ip as src_ip
FIELDALIAS-client_ip        = source_ip as client_ip
EVAL-threat_name            = coalesce(policy_rule_name,log_subtype)
LOOKUP-vendor_info_for_pan_aperture = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product


[pan:minemeld]
category = Network & Security
SHOULD_LINEMERGE = 0
pulldown_type = 1
